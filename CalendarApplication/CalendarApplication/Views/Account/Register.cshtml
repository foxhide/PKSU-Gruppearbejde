@model CalendarApplication.Models.Account.Register

@{
    ViewBag.Title = "Register";
}


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<h2>Register</h2>

@using (Html.BeginForm())
{
    <!-- Print message if any (fx if unsuccessful login) -->
    <p style="color:red">
        @TempData["message"]
    </p>
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Create new account</legend>
        <div><span style="color:red">*</span> means that the field is required<br /></div>
        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
            <span style="color:red">*</span>
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
            <span style="color:red">*</span>
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PasswordConfirm)
            <span style="color:red">*</span>
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.PasswordConfirm)
            @Html.ValidationMessageFor(model => model.PasswordConfirm)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RealName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RealName)
            @Html.ValidationMessageFor(model => model.RealName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>


        @Html.Raw(Html.GenerateCaptcha())
        @Html.ValidationMessage("recaptcha")
        <input type="submit" value="Register" />
    </fieldset>
}
