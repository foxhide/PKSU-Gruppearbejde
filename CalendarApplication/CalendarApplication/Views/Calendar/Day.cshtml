@model CalendarApplication.Models.Calendar.CalendarDay

@{
    ViewBag.Title = "Day";
}

@using CalendarApplication.Models.Calendar;
@using CalendarApplication.Models.User;
@using CalendarApplication.Models.Event;
@using CalendarApplication.Models.Maintenance;

<script src="@Url.Content("~/Scripts/calendar-script.js?" + CalendarApplication.Models.Maintenance.Config.GetVersion())" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/calendar-script-select-extn-" + (Request.Browser.IsMobileDevice?"touch":"mouse") + ".js?" + CalendarApplication.Models.Maintenance.Config.GetVersion())" type="text/javascript"></script>
<link href="@Url.Content("~/Content/Calendar.css?" + CalendarApplication.Models.Maintenance.Config.GetVersion())" rel="stylesheet" type="text/css" />

<h3 style="color:red">@TempData["errorMsg"]</h3>

@if(UserModel.GetCurrentUserID() != -1 && DateTime.Today <= Model.Date) {
    <!-- Only set the js-variables if user is signed in -->
    <script>
        setDate('@Calendar.GetJSDate(Model.Date)');
        offset = @Config.GetStartingHourOfDay();
    </script>
    
    <div id="time_counter" class="time_counter"></div>
}

<form id="cal_form" method="post">
    <input type="hidden" name="Date" id="Date" value="@Model.Date.ToString("yyyy-MM-dd")" />
    @Html.HiddenFor(model => model.Mode)

    <table>
        <tr>
            <td>
                <table style="font-size:20px;padding:0;border-spacing:0;width:700px">
                    <tr style="padding:0">
                        <td colspan="3" style="text-align:center;padding:0">
                            <input type="button" value="Today" onclick="goto('@(DateTime.Today.ToString("yyyy-MM-dd"))')" />
                        </td>
                    </tr>
                    <tr style="padding:0">
                        <td style="text-align:left;padding:0;width:15%">
                            <input type="button" value="@(Model.Date.AddDays(-1).ToString("<- d. MMM"))"
                                onclick="goto('@(Model.Date.AddDays(-1).ToString("yyyy-MM-dd"))')" />
                        </td>
                        <td style="padding:0;text-align:center;">
                            @(Model.Date.Day + ". " + Calendar.MONTHS[Model.Date.Month - 1] + " " + Model.Date.Year)
                        </td>
                        <td style="text-align:right;padding:0;width:15%">
                            <input type="button" value="@(Model.Date.AddDays(1).ToString("d. MMM ->"))"
                                onclick="goto('@(Model.Date.AddDays(1).ToString("yyyy-MM-dd"))')" />
                        </td>
                    </tr>
                </table>

                <table class="day-view">
                    <tr>
                        <td style="border-left:none;border-top:none"></td>
                        @foreach (SelectListItem room in Model.Filter.Rooms)
                        {
                            if (room.Selected)
                            {
                                <th>
                                    @room.Text
                                </th>
                            }
                        }
                    </tr>
                    <tr>
                        @{
                            DateTime offset = Model.Date;
                            <td class="timestamp" rowspan="2">@offset.ToString("HH:mm")</td>
                            foreach (SelectListItem room in Model.Filter.Rooms)
                            {
                                if (room.Selected)
                                {
                                    <td class="row">
                                        @* div needed for positioning of the other divs (events and selection) *@
                                        <div id="room_wrap_@room.Value" style="position:relative">
                                            <div id="room_@room.Value" class="room" style="position:absolute;z-index:1;width:100%;height:720px;">
                                                @foreach (BasicEvent e in Model.Events)
                                                {
                                                    if (e.Rooms.Contains(new Room { ID = Convert.ToInt32(room.Value) }))
                                                    {
                                                        @* Calculate painting start and height *@
                                                        int start = 0;
                                                        if (e.Start > offset)
                                                        {
                                                            TimeSpan s = e.Start - offset;
                                                            start = (s.Hours * 60 + s.Minutes) / 2;
                                                        }
                                                        int height = 720 - start;
                                                        if (e.End < offset.AddDays(1))
                                                        {
                                                            if (start == 0)
                                                            {
                                                                TimeSpan s = e.End - offset;
                                                                height = (s.Hours * 60 + s.Minutes) / 2;
                                                            }
                                                            else
                                                            {
                                                                TimeSpan s = e.End - e.Start;
                                                                height = (s.Hours * 60 + s.Minutes) / 2;
                                                            }
                                                        }
                                            
                                                        <div class="day-event" id="event_@(e.ID)_@room.Value"
                                                            style="top:@(start)px;height:@(height)px;
                                                                    background-color:@(e.getColor());@(e.ViewVisible ? "cursor:pointer" : "")">
                                                            @if (e.ViewVisible)
                                                            {
                                                                @e.Name <br />
                                                                @* Creator: e.Creator and more fields *@
                                                                <script>addEventGoto('event_@(e.ID)_@room.Value',@e.ID);</script>
                                                            }
                                                            else
                                                            {
                                                                @:Room occupied!
                                                            }
                                                        </div>
                                                    }
                                                }
                                            </div>
                                            @if (UserModel.GetCurrentUserID() != -1 && DateTime.Today <= Model.Date)
                                            {
                                                <!-- Only add rooms (add selection mechanism) if user is signed in -->
                                                <script>addRoom(@(room.Value))</script>
                                            }
                                        </div>
                                    </td>
                                }
                            }
                        }
                    </tr>
                    @for (int hour = 0; hour < 47; hour++)
                    {
                        <tr>
                            @if (hour % 2 != 0)
                            {
                                offset = offset.AddHours(1);
                                <td class="timestamp" rowspan="2">@offset.ToString("HH:mm")</td>
                            }
                            @foreach (SelectListItem room in Model.Filter.Rooms)
                            {
                                if (room.Selected)
                                { <td class="row"></td> }
                            }
                        </tr>
                    }
                </table>
            </td>
            <td>
                @Html.Partial("_FilterPartial", Model)

                @if (UserModel.GetCurrentUserID() != -1 && DateTime.Today <= Model.Date)
                {
                    <fieldset style="text-align:center">
                        <legend>Create event</legend>
                        <br />
                        @* A user is signed in... *@
                        <input type="button" value="Create event!" onclick="createNewEvent()"/>
                        <br />
                        <br />
                        <span style="color:gray;font-size:12px">Tip: click and drag to select<br />rooms and time.</span>
                        <br />
                        <input type="button" id="clear_button" value="Clear selection" onclick="removeAllSelections()" disabled="disabled" />
                    </fieldset>
                }
            </td>
        </tr>
    </table>
</form>
<br />
@if (UserModel.GetCurrentUserID() != -1 && DateTime.Today <= Model.Date)
{
    <!-- Let the js-functions know where the events are -->
    <script>
        @foreach (BasicEvent e in Model.Events)
        {
            foreach (Room room in e.Rooms)
            {
                @:addEvent(@room.ID,'@Calendar.GetJSDate(e.Start)','@Calendar.GetJSDate(e.End)');
            }
        }
    </script>
}