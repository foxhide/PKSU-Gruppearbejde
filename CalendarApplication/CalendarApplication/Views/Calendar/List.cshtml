@model CalendarApplication.Models.Calendar.CalendarList

@{
    ViewBag.Title = "List";
}

@using CalendarApplication.Models.Event;
@using CalendarApplication.Models.Calendar;

<script src="@Url.Content("~/Scripts/calendar-script.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/Calendar.css")" rel="stylesheet" type="text/css" />

<style>
    div.up-arrow {
        display:inline-block;
        width:30px;
        height:16px;
        background-image:url("/Content/images/up.png");
        background-repeat:no-repeat;
        background-size:14px;
        background-position-x:center;
        background-position-y:bottom;
    }

    div.down-arrow {
        display:inline-block;
        width:30px;
        height:16px;
        background-image:url("/Content/images/down.png");
        background-repeat:no-repeat;
        background-size:14px;
        background-position-x:center;
        background-position-y:bottom;
    }
</style>

<h3 style="color:red">@TempData["errorMsg"]</h3>

<form id="list_form" method="post">
    @Html.HiddenFor(model => model.EventFrom)
    @Html.HiddenFor(model => model.OldLimit)
    @Html.HiddenFor(model => model.Order)
    @Html.HiddenFor(model => model.Descending)
    <table>
        <tr>
            <td>
                <fieldset id="search">
                    <legend>Search</legend>

                    <table id="dates">
                        <tr>
                            <td id="from">
                                From date: <br />
                                @Html.DateTimeEditorFor(model => model.Start)
                            </td>
                            <td id="all">
                                Show all events:
                                @Html.CheckBoxFor(model => model.All)
                            </td>
                        </tr>
                        <tr>
                            <td id="to">
                                To Date: <br />
                                @Html.DateTimeEditorFor(model => model.End)
                            </td>
                        </tr>
                    </table>

                    <table id="limit">
                        <tr>
                            <td>Results pr. page: 
                                <select name="Limit">
                                    @foreach (int limit in CalendarList.LIMITS)
                                    {
                                    <option value="@limit" @(limit == Model.Limit ? "selected='selected'":"")>@limit</option>
                                    }
                                </select>
                            </td>
                        </tr>
                    </table>
    
                    <input type="submit" value="Search" />
                </fieldset>
            </td>
            <td>
                @Html.Partial("_FilterPartial", Model)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <h3>Showing events @(Model.EventFrom+1)-@(Model.EventFrom+Model.Limit > Model.TotalEventCount ?
                                                            Model.TotalEventCount : Model.EventFrom+Model.Limit)
                    out of a total of @Model.TotalEventCount!</h3>

                <table class="navigator" id="navi-high">
                    <tr>
                        <td onclick="gotoOtherPage(@(Model.EventFrom-Model.Limit < 0 ? 0 : Model.EventFrom-Model.Limit))"><-</td>
                        @for (int i = 0; Model.TotalEventCount > 0 && i <= (Model.TotalEventCount-1) / Model.Limit; i++)
                        {
                            int gotoVal = i * Model.Limit;
                            if(gotoVal != Model.EventFrom) { <td  onclick="gotoOtherPage(@(gotoVal))">@(i+1)</td> }
                            else { <td class="selected">@(i+1)</td> }
                        }
                        <td onclick="gotoOtherPage(@(Model.EventFrom+Model.Limit > Model.TotalEventCount
                                                    ? Model.TotalEventCount
                                                    : Model.EventFrom+Model.Limit))">-></td>
                    </tr>
                </table>

                <br />

                <table class="event-list" id ="list">
                    <tr>
                        <th onclick="sortBy('NAME')">
                            Event name
                            @if (Model.Order == EventOrder.NAME)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                        <th onclick="sortBy('TYPE')">
                            Type
                            @if (Model.Order == EventOrder.TYPE)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                        <th onclick="sortBy('CREATOR')">
                            Creator
                            @if (Model.Order == EventOrder.CREATOR)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                        <th onclick="sortBy('START')">
                            Starting
                            @if (Model.Order == EventOrder.START)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                        <th onclick="sortBy('END')">
                            Ending
                            @if (Model.Order == EventOrder.END)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                        <th onclick="sortBy('STATE')">
                            State
                            @if (Model.Order == EventOrder.STATE)
                            {
                                <div class="@(Model.Descending ? "up-arrow" : "down-arrow")"></div>
                            }
                        </th>
                    </tr>
                    @foreach (BasicEvent e in Model.Events)
                    {
                        <tr>
                            <td>@Html.ActionLink(e.Name, "Index", "Event", new { eventId = e.ID }, null)</td>
                            <td>@e.TypeName</td>
                            <td>@Html.ActionLink(e.Creator, "Index", "User", new { userId = e.CreatorId }, null)</td>
                            <td>@e.Start</td>
                            <td>@e.End</td>
                            <td style="background-color:@e.getColor()">@e.getStateText()</td>
                        </tr>
                    }
                </table>

                <br />
                <table class="navigator" id="navi-low">
                    <tr>
                        <td onclick="gotoOtherPage(@(Model.EventFrom-Model.Limit < 0 ? 0 : Model.EventFrom-Model.Limit))"><-</td>
                        @for (int i = 0; Model.TotalEventCount > 0 && i <= (Model.TotalEventCount-1) / Model.Limit; i++)
                        {
                            int gotoVal = i * Model.Limit;
                            if(gotoVal != Model.EventFrom) { <td  onclick="gotoOtherPage(@(gotoVal))">@(i+1)</td> }
                            else { <td class="selected">@(i+1)</td> }
                        }
                        <td onclick="gotoOtherPage(@(Model.EventFrom+Model.Limit > Model.TotalEventCount
                                                    ? Model.TotalEventCount
                                                    : Model.EventFrom+Model.Limit))">-></td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</form>