@model CalendarApplication.Models.Event.EventWithDetails
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using CalendarApplication.Models.Event
@using CalendarApplication.Models.EventType
@using CalendarApplication.Models.User

@if (Model.ID < 0) {
    <h2>Error loading event!</h2>
    <h3 style="color:red">@TempData["errorMsg"]</h3>
}
else {
    <table>
        <tr>
            <td>Event Details</td>
            <td>Rooms Used</td>
            @if (Model.TypeSpecifics != null && Model.TypeSpecifics.Count != 0)
            {
                <td>Event type specific</td>
            }
        </tr>
        <tr>
            <td>
                <table class="gridtable">
                    <tr>
                        <td>Event Id</td>
                        <td>@Model.ID </td>
                    </tr>
                    <tr>
                        <td>Event Name</td>
                        <td>@Model.Name</td>
                    </tr>
                    <tr>
                        <td>Event Creator</td>
                        <td>@Html.ActionLink(Model.Creator, "Index", "User", new { UserId = Model.CreatorId }, null)</td>
                    </tr>
                    <tr>
                        <td>Event Type</td>
                        <td>@Model.TypeName</td>
                    </tr>
                    <tr>
                        <td>Event Start</td>
                        <td>@Model.Start</td>
                    </tr>
                    <tr>
                        <td>Event End</td>
                        <td>@Model.End</td>
                    </tr>
                    <tr>
                        <td>Event State</td>
                        <td style="background-color: @(Model.getColor())">@(Model.getStateText())</td>
                    </tr>
                    <tr>
                        <td>Event Visible</td>
                        <td>@Model.Visible</td>
                    </tr>
                </table>
            </td>
            <td>
                <table class="gridtable">
                    @foreach (Room room in Model.Rooms)
                    {
                        <tr>
                            <td>@room.Name</td>
                        </tr>
                    }
                </table>
            </td>
            <td>
                <table class="gridtable">
                    @if (Model.TypeSpecifics != null && Model.TypeSpecifics.Count != 0)
                    {
                        foreach (FieldModel fm in Model.TypeSpecifics)
                        {
                            <tr>
                                <td>@fm.Name</td>
                                <td>
                                    @switch(fm.Datatype)
                                    {
                                        case Fieldtype.Float:       @fm.FloatValue break;
                                        case Fieldtype.User:        if(fm.IntValue != 0) { @Html.ActionLink(fm.StringValue, "Index", "User", new { UserId = fm.IntValue }, null) }
                                                                    else { @fm.StringValue } break;
                                        case Fieldtype.Group:       @fm.StringValue break;
                                        case Fieldtype.Text:        @fm.StringValue break;
                                        case Fieldtype.File:        @fm.IntValue break;
                                        case Fieldtype.Datetime:    @fm.DateValue break;
                                        case Fieldtype.Bool:        @(fm.BoolValue ? "Yes" : "No") break;
                                        case Fieldtype.UserList:    <table>
                                                                    @foreach (SelectListItem user in fm.List)
                                                                    {
                                                                        <tr><td>
                                                                            @Html.ActionLink(user.Text, "Index", "User", new { UserId = Convert.ToInt32(user.Value) }, null)
                                                                        </td></tr>
                                                                    }
                                                                    </table>
                                                                    break;
                                        case Fieldtype.FileList:
                                        case Fieldtype.GroupList:    <table>
                                                                    @foreach (SelectListItem item in fm.List)
                                                                    {
                                                                        <tr><td>
                                                                            @item.Text
                                                                        </td></tr>
                                                                    }
                                                                    </table>
                                                                    break;
                                    }
                                </td>
                            </tr>
                        }
                    }

                </table>
            </td>
        </tr>
    </table>
    if(UserModel.EditAuthentication(Model.ID,UserModel.GetCurrentUserID()))
    {
        @Html.ActionLink("Edit event", "EditEvent", "Event", new { eventId = Model.ID, year = 0, month = 0, day = 0 }, null)
    }

    <script>
        function printEvent(eventId) {
            $.ajax({
                url: "/Event/PrintEvent",
                type: 'POST',
                data: { eventId: eventId },
                success: function (result) { window.open(result); }
            });
        }
    </script>
    
    <button onclick="printEvent(@(Model.ID))">Print Event</button>
}