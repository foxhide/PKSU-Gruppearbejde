@model CalendarApplication.Models.Event.EventWithDetails
@{
    ViewBag.Title = "PrintEvent";
    Layout = "~/Views/Shared/_PrintEvent.cshtml";
}

@using CalendarApplication.Models.Event
@using CalendarApplication.Models.EventType
@using CalendarApplication.Models.User
@using CalendarApplication.Models.Calendar

<style>
                    /* Styles used for event display */
                    .event-table {
                        border-collapse:collapse;
                        margin-left:72px;
                        margin-right:auto;
                        width:64%;
                    }
                    .event-table tr td {
                        padding:5px 5px 5px 10px; /*N,W,S,E*/
                        border:1px grey solid;
                        line-break:auto;
                    }

                    #delete_prompt {
                        color:white;
                        background-color:red;
                        text-align:center;
                        position:absolute;
                        z-index:2;
                        display:none;
                        width:260px;
                    }

                    #options_pane {
                        position:fixed;
                        top:160px;
                        right:200px;
                        width:140px;
                        background-color:lightgrey;
                        border:1px darkgrey solid;
                    }
                    #options_pane table {
                        border-collapse:collapse;
                        width:100%;
                    }
                    #options_pane tr td {
                        padding:1px 10px 1px 10px;
                        background-color:lightgrey;
                    }
                    #options_pane th {
                        padding:3px;
                        color:white;
                        background-color:black;
                    }
                </style>

<table>
    <tr>
        <td>
            @if (Model.ID < 0)
            {
                <h2>Error loading event!</h2>
                <h3 style="color:red">@TempData["errorMsg"]</h3>
            }
            else
            {
                <h2>Event: @Model.Name</h2>
    
                UserModel u = UserModel.GetCurrent();
    
                <table class="event-table" style="width:80%;">
                    <tr id="type">
                        <td style="width:100px;"><b>Type</b></td><td>@Model.TypeName</td>
                    </tr>
                    <tr id="creator">
                        <td><b>Created by</b></td><td>@Model.Creator</td>
                    </tr>
                    <tr id="creation_date">
                        <td><b>Creation date</b></td><td>@Calendar.GetDateTimeString(Model.CreationDate)</td>
                    </tr>
                    <tr id="from">
                        <td><b>From</b></td><td>@Calendar.GetDateTimeString(Model.Start)</td>
                    </tr>
                    <tr id="to">
                        <td><b>To</b></td><td>@Calendar.GetDateTimeString(Model.End)</td>
                    </tr>
                    <tr id="event_state">
                        <td><b>State</b></td>
                        <td>
                            <span id="state" class="state_@Model.State"></span>
                        </td>
                    </tr>
                    @if (UserModel.GetCurrentUserID() != -1)
                    {
                        <tr id="visibel">
                            <td><b>Public</b></td><td><img src="@Url.Content("~/Content/images/" + (Model.Visible ? "ok.png" : "error.png"))" height="22" width="22" /></td>
                        </tr>
                    }
                    <tr id="rooms">
                        <td><b>Rooms</b></td>
                        <td>
                            @for (int i = 0; i < Model.Rooms.Count(); i++)
                            {
                                @(Model.Rooms[i].Name + (i != Model.Rooms.Count() - 1 ? ", " : ""))
                            }
                        </td>
                    </tr>
                    @if (Model.TypeSpecifics != null && Model.TypeSpecifics.Count > 0)
                    {
                        foreach (FieldModel fm in Model.TypeSpecifics)
                        {
                            <tr>
                                <td><b>@fm.Name</b></td>
                                <td>
                                    @switch (fm.Datatype)
                                    {
                                        case Fieldtype.Float:       @fm.FloatValue break;
                                        case Fieldtype.User:
                                        case Fieldtype.Group:
                                        case Fieldtype.Text:        @fm.StringValue break;
                                        case Fieldtype.File:        @fm.File.CurrentFileName break;
                                        case Fieldtype.Datetime:    @Calendar.GetDateTimeString(fm.DateValue) break;
                                        case Fieldtype.Bool:        <img src="@Url.Content("~/Content/images/" + (fm.BoolValue ? "ok.png" : "error.png"))" width="22" height="22"/> break;
                                        case Fieldtype.UserList:
                                        case Fieldtype.GroupList:   for (int i = 0; i < fm.List.Count(); i++)
                                                                    {
                                                                        @(fm.List[i].Text + (i != fm.List.Count() - 1 ? " ; " : ""))
                                                                    }
                                                                    break;
                                        case Fieldtype.FileList:    for (int i = 0; i < fm.FileList.Count; i++)
                                                                    {
                                                                        @(fm.FileList[i].CurrentFileName + (i != fm.List.Count - 1 ? " ; " : ""))
                                                                    }
                                                                    break;
                                        case Fieldtype.TextList:    for (int i = 0; i < fm.StringList.Count(); i++)
                                                                    {
                                                                        @(fm.StringList[i].Text + (i != fm.StringList.Count() - 1 ? " ; " : ""))
                                                                    }
                                                                    break;
                                    }
                                </td>
                            </tr>
                        }
                    }
                </table>
            }
        </td>
    </tr>
</table>